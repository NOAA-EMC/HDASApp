     - obs space:
         name: sondes  
         obsdatain:
           engine:
             type: H5File
             obsfile: @OBSFILE@
           obsgrouping:
             group variables: ["stationIdentification"]
             sort variable: "pressure"
             sort order: "descending"
         obsdataout:
           engine:
             type: H5File
             obsfile: ADPUPA_IODA_hofx_q_120.nc
             allow overwrite: true
         io pool:
           max pool size: 1
         observed variables: [specificHumidity]
         simulated variables: [specificHumidity]
       obs operator:
         name: Composite
         components: 
         - name: VertInterp
           vertical coordinate: air_pressure
           observation vertical coordinate: pressure
           observation vertical coordinate group: MetaData
           interpolation method: log-linear
           variables:
           - name: specificHumidity

       obs error:
         covariance model: diagonal

       obs filters:
         # Regional Domain Check
         - filter: Bounds Check
           filter variables:
           - name: specificHumidity
           test variables:
           - name: GeoVaLs/observable_domain_mask
             flag all filter variables if any test variable is out of bounds: true
             minvalue: 0.0
             maxvalue: 0.5
         # Reject all obs with QualityMarker > 3
         - filter: RejectList
           apply at iterations: 0,1
           where:
           - variable: ObsType/specificHumidity
             is_in: 120
           - variable: QualityMarker/specificHumidity
             is_in: 4-15

         # Time window filter
         - filter: Domain Check
           apply at iterations: 0,1
           where:
             - variable:
                 name: MetaData/timeOffset # units: s
               minvalue: -10800
               maxvalue:  10800

         - filter: Perform Action
           filter variables:
           - name: specificHumidity
           where:
           - variable: ObsType/specificHumidity
             is_in: 120
           action:
             name: assign error
             error function:
               name: ObsFunction/ObsErrorModelStepwiseLinear
               options:
                 xvar:
                   name: MetaData/pressure
                 xvals: [110000, 105000, 100000, 95000, 90000, 85000, 80000, 75000, 70000, 65000, 60000, 55000, 50000, 45000, 40000, 35000, 30000, 25000, 20000, 15000, 10000, 7500, 5000, 4000, 3000, 2000, 1000, 500, 400, 300, 200, 100, 0]
                 errors: [0.060737, 0.066294, 0.074223, 0.083688, 0.094025, 0.10439,0.11591, 0.12715,0.13819, 0.1485, 0.15562, 0.15972, 0.16305, 0.16707, 0.17091, 0.17517, 0.18047,0.18621, 0.19134, 0.19517, 0.19762, 0.19897, 0.19961, 0.19988, 0.19997, 0.19999, 0.19999, 0.2, 0.19999, 0.19997, 0.19992, 0.19983, 0.19974]
         # Error inflation based on errormod (qcmod.f90)
         - filter: Perform Action
           filter variables:
           - name: specificHumidity
           where:
           - variable: ObsType/specificHumidity
             is_in: 120
           action:
             name: inflate error
             inflation variable:
               name: ObsFunction/ObsErrorFactorConventional
               options:
                 inflate variables: [specificHumidity]
                 pressure: MetaData/pressure
         ## error inflation if observation QM is 3 or 7 (read_prepbufr.f90)
         - filter: Perform Action
           filter variables:
           - name: specificHumidity
           where:
            - variable:
                name: QualityMarker/specificHumidity
              is_in: 3        # qm=7 observation is aleady blocked
           action:
             name: inflate error
             inflation factor: 1.2

         # Error inflation based on pressure check (setupq.f90)
         - filter: Perform Action
           filter variables:
           - name: specificHumidity
           where:
           - variable: ObsType/specificHumidity
             is_in: 120
           action:
             name: inflate error
             inflation variable:
               name: ObsFunction/ObsErrorFactorPressureCheck
               options:
                 variable: specificHumidity
                 inflation factor: 8.0
                 request_saturation_specific_humidity_geovals: true

         # Create temporary ObsErrorData
         - filter: Variable Assignment
           apply at iterations: 0,1
           assignments:
           - name: TempObsErrorData/specificHumidity
             type: float
             function:
               name: ObsFunction/Arithmetic
               options:
                 variables:
                 - name: ObsErrorData/specificHumidity
           defer to post: true
         # Set ObsError set "error parameter" if < "max value"
         - filter: Perform Action
           apply at iterations: 0,1
           filter variables:
           - name: specificHumidity
           action:
             name: assign error
             error parameter: 10.0
           where:
           - variable:
               name: ObsErrorData/specificHumidity
             maxvalue: 10.0
           - variable:
               name: ObsErrorData/specificHumidity
             value: is_valid
           defer to post: true
         # Set ObsError set "error parameter" if > "min value"
         - filter: Perform Action
           apply at iterations: 0,1
           filter variables:
           - name: specificHumidity
           action:
             name: assign error
             error parameter: 100.0
           where:
           - variable:
               name: ObsErrorData/specificHumidity
             minvalue: 100.0
           - variable:
               name: ObsErrorData/specificHumidity
             value: is_valid
           defer to post: true

         # Gross Error Check
         - filter: Background Check
           apply at iterations: 0,1
           filter variables:
           - name: specificHumidity
           threshold: 8.0
           action:
             name: reject
           where:
           - variable: ObsType/specificHumidity
           - variable: QualityMarker/specificHumidity
             is_not_in: 3
           defer to post: true
         # Gross Error Check: cgross*0.7 if QualityMarker=3
         - filter: Background Check
           apply at iterations: 0,1
           filter variables:
           - name: specificHumidity
           threshold: 5.6 
           action:
             name: reject
           where:
           - variable: ObsType/specificHumidity
           - variable: QualityMarker/specificHumidity
             is_in: 3
           defer to post: true

         # Re-assign err ObsErrorData <--- TempObsErrorData after gross error check.
         - filter: Perform Action
           apply at iterations: 0,1
           filter variables:
           - name: specificHumidity
           action:
             name: assign error
             error function: TempObsErrorData/specificHumidity
           where:
           - variable:
               name: TempObsErrorData/specificHumidity
             value: is_valid
           defer to post: true
